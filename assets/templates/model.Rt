# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                              _                                          #
#                             | |                                         #
#                 _ __    ___ | |_  _ __    __ _ __      __               #
#                | '_ \  / _ \| __|| '_ \  / _` |\ \ /\ / /               #
#                | | | ||  __/| |_ | |_) || (_| | \ V  V /                #
#                |_| |_| \___| \__|| .__/  \__,_|  \_/\_/                 #
#                                  | |                                    #
#                                  |_|                                    #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                                         #
# File contributors:                                                      #
#   - {{author}}                                                          #
#                                                                         #
# File description:                                                       #
#   - generated from template on {{time}} by {{author}}                   #
#   - you may add your description here                                   #
#                                                                         #
# Seminal paper:                                                          #
#   - https://dx.doi.org/{{doi}}                                          #
#                                                                         #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Includes.
#' @include Generator.R Sampler.R Estimator.R Comparator.R



# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Generating {{name}} model parameters ------------------------------------
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

{{name}}Generator <- R6::R6Class("{{name}}Generator",
    inherit = {{parent.generator}}Generator,


    private = list(
        ..generator = function(argument.1, argument.2) {
            # Add your implementation here.
        }
    )
)



# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Sampling data based on {{name}} model parameters ------------------------
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

{{name}}Sampler <- R6::R6Class("{{name}}Sampler",
    inherit = Sampler,


    private = list(
        ..sampler = function(argument.1, argument.2) {
            # Add your implementation here.
        }
    )
)



# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Estimating {{name}} model from data -------------------------------------
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

{{name}}Estimator <- R6::R6Class("{{name}}Estimator",
    inherit = Estimator,


    private = list(
        ..frequentist = function(argument.1, argument.2) {
            # Add your implementation here.
        },


        ..bayesian = function(argument.1, argument.2) {
            # Implementation here or throw the following error if you wish to leave unimplemented:
            stop(..ERRORS..$not.implemented)
        }
    )
)



# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Comparing {{name}} models -----------------------------------------------
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

{{name}}Comparator <- R6::R6Class("{{name}}Comparator",
    inherit = Comparator,


    private = list(
        ..comparator = function(argument.1, argument.2) {
            # Add your implementation here.
        }
    )
)



# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Aliases for {{name}} model ----------------------------------------------
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Generator alias.

Generator$..ALIASES..${{alias}} <- list(
    name = "{{alias}}",
    class = {{name}}Generator,

    # Add a set of example arguments used to automatically test your implementation.
    example.args = list(
        argument.1 = 1, 
        argument.2 = 2
    )
)



# Sampler alias.

Sampler$..ALIASES..${{alias}} <- list(
    name = "{{alias}}",
    class = {{name}}Sampler,

    # Add a set of example arguments used to automatically test your implementation.
    example.args = list(
        argument.1 = 1, 
        argument.2 = 2
    )
)



# Estimator alias.

Estimator$..ALIASES..${{alias}} <- list(
    name = "{{alias}}",
    class = {{name}}Estimator,

    # Add a set of example arguments used to automatically test your implementation.
    example.args = list(
        frequentist = list(
            argument.1 = 1, 
            argument.2 = 2
        ),
        bayesian = list(
            argument.1 = 1, 
            argument.2 = 2
        )
    )
)



# Comparator alias.

Comparator$..ALIASES..${{alias}} <- list(
    name = "{{alias}}",
    class = {{name}}Comparator,

    # Add a set of example arguments used to automatically test your implementation.
    example.args = list(
        argument.1 = 1, 
        argument.2 = 2
    )
)



# End of file.
